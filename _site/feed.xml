<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andy Sigler</title>
    <description>I make things.</description>
    <link>http://andysigler.github.io/</link>
    <atom:link href="http://andysigler.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>OT2 Electronics</title>
        <description>&lt;video id=&quot;vid_ot2&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_video.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_video.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_video.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2 = document.getElementById(&#39;vid_ot2&#39;);
    vid_ot2.removeAttribute(&#39;controls&#39;);
    vid_ot2.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_ot2.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_pcb_artwork.jpg&quot; alt=&quot;OT2 with PCBs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_production_boards.jpg&quot; alt=&quot;OT2 PCBs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:33%&quot; src=&quot;http://andysigler.github.io/images/ot2_production_caitlyn.jpg&quot; /&gt;
&lt;img style=&quot;max-width:63%;margin-left:3.5%&quot; src=&quot;http://andysigler.github.io/images/ot2_production_kris.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_production_cables.jpg&quot; alt=&quot;OT2 Ribbon Cables&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:63%&quot; src=&quot;http://andysigler.github.io/images/pipette_diagram.gif&quot; /&gt;
&lt;img style=&quot;max-width:33%;margin-left:3.5%&quot; src=&quot;http://andysigler.github.io/images/ot2_production_pipette.png&quot; /&gt;&lt;/p&gt;

&lt;video id=&quot;vid_tip_probe&quot; style=&quot;width:100%;max-width:600px; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/tip_probe.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/tip_probe.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/tip_probe.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_tip_probe = document.getElementById(&#39;vid_tip_probe&#39;);
    vid_tip_probe.removeAttribute(&#39;controls&#39;);
    vid_tip_probe.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_tip_probe.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;pcb-artwork&quot;&gt;PCB Artwork&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_pcb_art_vertical.jpg&quot; alt=&quot;OT2 PCBs Artwork&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;pictures-before--after-launch&quot;&gt;Pictures Before &amp;amp; After Launch&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_camera.jpg&quot; alt=&quot;OT2 on Camera&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_prototype_gantry.jpg&quot; alt=&quot;OT2 Prototype&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_prototype_pcbs.jpg&quot; alt=&quot;OT2 Prototype Batch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:33%&quot; src=&quot;http://andysigler.github.io/images/ot2_prototype_caitlyn.jpg&quot; /&gt;
&lt;img style=&quot;max-width:63%;margin-left:3.5%&quot; src=&quot;http://andysigler.github.io/images/ot2_prototype_face.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_prototype_CE.jpg&quot; alt=&quot;OT2 CE&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/ot2_factory_people.jpg&quot; alt=&quot;Opentrons Employees in Shenzhen&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://andysigler.github.io/products/opentrons-ot2/</link>
        <guid isPermaLink="true">http://andysigler.github.io/products/opentrons-ot2/</guid>
      </item>
    
      <item>
        <title>Opentrons Modules</title>
        <description>&lt;h1 id=&quot;temperature-module&quot;&gt;Temperature Module&lt;/h1&gt;

&lt;video id=&quot;vid_ot2_temp_deck&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_temp_deck.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_temp_deck.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_temp_deck.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_temp_deck = document.getElementById(&#39;vid_ot2_temp_deck&#39;);
    vid_ot2_temp_deck.removeAttribute(&#39;controls&#39;);
    vid_ot2_temp_deck.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_ot2_temp_deck.play();
    })
&lt;/script&gt;

&lt;video id=&quot;vid_ot2_temp_deck_loop&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_temp_deck_loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_temp_deck_loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_temp_deck_loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_temp_deck_loop = document.getElementById(&#39;vid_ot2_temp_deck_loop&#39;);
    vid_ot2_temp_deck_loop.removeAttribute(&#39;controls&#39;);
    vid_ot2_temp_deck_loop.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_ot2_temp_deck_loop.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;img style=&quot;max-width:32%;&quot; src=&quot;http://andysigler.github.io/images/ot2_temp_deck_2.jpg&quot; /&gt;
&lt;img style=&quot;max-width:32%;margin-left:1.4%&quot; src=&quot;http://andysigler.github.io/images/ot2_temp_deck_3.jpg&quot; /&gt;
&lt;img style=&quot;max-width:32%;margin-left:1.4%&quot; src=&quot;http://andysigler.github.io/images/ot2_temp_deck_4.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;magnetic-module&quot;&gt;Magnetic Module&lt;/h1&gt;

&lt;video id=&quot;vid_ot2_mag_deck&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_mag_deck.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_mag_deck.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_mag_deck.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_mag_deck = document.getElementById(&#39;vid_ot2_mag_deck&#39;);
    vid_ot2_mag_deck.removeAttribute(&#39;controls&#39;);
    vid_ot2_mag_deck.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_ot2_mag_deck.play();
    })
&lt;/script&gt;

&lt;video id=&quot;vid_ot2_mag_deck_loop&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_mag_deck_loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_mag_deck_loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/ot2_mag_deck_loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_mag_deck_loop = document.getElementById(&#39;vid_ot2_mag_deck_loop&#39;);
    vid_ot2_mag_deck_loop.removeAttribute(&#39;controls&#39;);
    vid_ot2_mag_deck_loop.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_ot2_mag_deck_loop.play();
    })
&lt;/script&gt;

</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://andysigler.github.io/products/opentrons-modules/</link>
        <guid isPermaLink="true">http://andysigler.github.io/products/opentrons-modules/</guid>
      </item>
    
      <item>
        <title>Homemade Hardware</title>
        <description>&lt;p&gt;I’ve been teaching graduate students at &lt;a href=&quot;http://tisch.nyu.edu/itp&quot;&gt;NYU’s ITP program&lt;/a&gt; since 2015 as an adjunct professor, teaching a course of my own making title Homemade Hardware (&lt;a href=&quot;http://www.homemadehardware.com&quot;&gt;link to my class website&lt;/a&gt;). There, student learn to design and fabricate do-it-yourself PCBs, all without leaving the school.&lt;/p&gt;

&lt;p&gt;ITP is the birthplace of &lt;a href=&quot;https://en.wikipedia.org/wiki/Physical_computing&quot;&gt;physical computing&lt;/a&gt;, so students there have been excited to take greater control over their hardware projects. Some project examples are shown in the picture at the top of this page, and they include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;analog and digital musical instruments&lt;/li&gt;
  &lt;li&gt;tiny wall-mounted GIF players&lt;/li&gt;
  &lt;li&gt;knitting wearables&lt;/li&gt;
  &lt;li&gt;childrens’ toys&lt;/li&gt;
  &lt;li&gt;smart cigarette lighter&lt;/li&gt;
  &lt;li&gt;wireless sensors&lt;/li&gt;
  &lt;li&gt;and many more…&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-exactly-is-taught&quot;&gt;What Exactly is Taught?&lt;/h1&gt;

&lt;p&gt;To make a working PCB for a physical computing project, a variety of new skills must be learned relatively quickly in a semester. From electronics basics, to CAD design, and milling machines, it definitely true that hardware is hard, but in the end is most rewarding.&lt;/p&gt;

&lt;p&gt;We start the semester off taking ITP’s most common circuit board, the &lt;a href=&quot;https://store.arduino.cc/usa/arduino-uno-rev3&quot;&gt;Arduino Uno&lt;/a&gt;, and breaking it down to it’s most simple form (just the micro on a breadboard). We then take an indepth look at how a piece of code is placed onto the micro, so that now the students no longer need an actual Arduino to make their projects.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/arduino-to-breadboard.png&quot; alt=&quot;Arduino to Breadboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then, there’s a quick review of electronics basics, just the bare minimum so they can make simple digital circuits. With this new knowledge in place, they get their hands dirty soldering through-hole PCBs, and populating their first surface-mount PCB. ITP has a nice reflow oven, set of heat guns, and the most amazing manual pick-and-place machine (pictured below).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/smt-place-2000.jpg&quot; alt=&quot;SMT Place 2000&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then it’s off to the fun stuff, design with &lt;a href=&quot;https://www.autodesk.com/products/eagle/overview&quot;&gt;Eagle CAD&lt;/a&gt; and micro-milling with &lt;a href=&quot;https://www.bantamtools.com/pages/products&quot;&gt;Bantam Tools’ Desktop PCB Milling Machine&lt;/a&gt;. This is where they can start putting their ideas down into board designs, and quickly milling them to test and try out. The desktop PCB milling machine is was the original game-changer that kickstarted this class, and it’s great to see it doing well and continuing to improve.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/bantam.jpg&quot; alt=&quot;Bantam Tools&#39; Desktop PCB Milling Machine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The final weeks of the class, I shift to acid etching PCBs using muriatic acid, and a laser-cutter to remove the acid-blocking ink (this is to replace the older toner-transfer method). While acid etching combined with micro-milling yields the best PCB quality, only a handful of students in the past have chosen acid etching, probably because the process is long and more prone to mistakes.&lt;/p&gt;

&lt;h1 id=&quot;lessons-learned-on-diy-pcbs&quot;&gt;Lessons Learned on DIY PCBs&lt;/h1&gt;

&lt;p&gt;During my &lt;a href=&quot;http://andysigler.github.io/projects/patchbay&quot;&gt;master’s thesis at ITP&lt;/a&gt;, I thought that homemade PCBs would spur some kind of maker revolution, similar to 3d printing. Now I’m not as pie-in-the-sky as I was then (like some 3d printing evangelicals from years past may also feel), but I do think homemade PCBs are a welcome addition to the maker processes. And perhaps it will continue to get easier and easier.&lt;/p&gt;

&lt;p&gt;I’ve learned that the short-term benefits to students are that they are able to build ITP projects that do not fall apart easily (this is most noticable when my students perform at the NIME concert and their piece does not break). Also, they are better able to build a polished look and size for their hardware projects during thesis and in their portfolio.&lt;/p&gt;

&lt;p&gt;In the long-term, students have been able to move on and work with electronics professionally, just as I did. Making DIY PCBs is not a normal way of learning electronics, but I think it is a strength because once they move on to professionally made PCBs, it seems so much easier that it’s not intimidating any more.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://andysigler.github.io/teaching/homemade-hardware/</link>
        <guid isPermaLink="true">http://andysigler.github.io/teaching/homemade-hardware/</guid>
      </item>
    
      <item>
        <title>Tomorrow Lab</title>
        <description>&lt;p&gt;I spent about a year working as a Electronics Design Engineer at &lt;a href=&quot;https://www.tomorrow-lab.com&quot;&gt;Tomorrow Lab&lt;/a&gt;. It was a wonderful experience, as it was my first job outside of the NYU sphere, and we were constantly working on new initiatives and technologies.&lt;/p&gt;

&lt;p&gt;Below I have described three products that I contributed to, some with more contributions than others. However, as Tomorrow Lab is hired by outside companies to design, some of the products that we spent considerable time on were never revealed to the world for any number of reasons outside of our control. Those that did not make it are not shown on this page, which is too bad (sad-face).&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;waycount---traffic-counter&quot;&gt;WayCount - Traffic Counter&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tomorrow-lab.com/work/waycount&quot;&gt;See documentation on Tomorrow Lab’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The WayCount it a car-counting device. It uses long tubes stretched across a rode to sense a car, logs the time it happened, and then transfers the accumulated data over Bluetooth to the owner’s smartphone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/waycount-1.jpg&quot; alt=&quot;WayCount Traffic Counter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The motivations behind making the, as conceived by Ted Ulrich at Tomorrow Lab, was to be an affordable, easy to use, and well designed device help monitor and plan traffic flows. The original WayCount transferred it’s data over USB, and had a more DIY feel. This next generation model was better designed, more accurate, and allowed data transfer wirelessly to make retrieval easier.&lt;/p&gt;

&lt;p&gt;My personal contributions to this project were early component testing and selection, systems design, firmware development, electrical/PCB design, and testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/waycount-2.jpg&quot; alt=&quot;WayCount Traffic Counter&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it Works&lt;/h2&gt;

&lt;p&gt;When a wheel passes over the rubber tubes, it compresses the air inside, sending that pressure out to the ends of the tube. There are two tubes a few inches apart, so that the direction of the wheel can be estimated. Inside the device, a small piezo microphone is press-fit against the tube, to detect when there is a change in air pressure.&lt;/p&gt;

&lt;p&gt;Small amplifiers are used to boost the signal into a higher voltage. This signal then triggers the onboard analog counting ICs. These ICs were able to increment their binary outputs on every rising edge of the input signal, allowing very fast consecutive pulses to be temporarily recorded. Once a counter hit its limit, the microntroller would wake up from deep sleep and record the number of pulses that have occured since the last recording.&lt;/p&gt;

&lt;p&gt;The microcontroller inside is the NRF51822 from Nordic, which has built-in Bluetooth LE capabilities, as well as ultra low-power features to conserve battery power. With the combination of the analog counting ICs and the NRF51’s low-power consumption, the device is able to stay powered on a single battery for a few years.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;lotik---water-monitor&quot;&gt;Lotik - Water Monitor&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tomorrow-lab.com/work/lotik&quot;&gt;See documentation on Tomorrow Lab’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This device, designed for &lt;a href=&quot;http://lotik.com&quot;&gt;Lotik Labs&lt;/a&gt;, is a water-usage monitor of for residential plumbing. The device is clamped onto any water pipe, like for a sink, faucet, or toilet, and it can detect when and how much water is flowing. This data is then sent wireless to a central hub located in the building, to transmit to Lotik’s central monitoring service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/lotik-1.jpg&quot; alt=&quot;Lotik Labs&#39; Water Monitor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Intended to be used by apartment building owners, installing many devices within a single building not only helps the devices communicate back to the internet, but also gives greater understanding into how, when, and who is using water in a building. Traditionally, a single apartment is given a single meter to track how much water is used, but with Lotik’s technology, the detail can be focused down to individual uses.&lt;/p&gt;

&lt;p&gt;My personal contributions to this project were early component testing and selection, systems design, firmware development, electrical/PCB design, and testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/lotik-2.jpg&quot; alt=&quot;Lotik Labs&#39; Water Monitor&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-it-works-1&quot;&gt;How it Works&lt;/h2&gt;

&lt;p&gt;The Lotick water monitor detects vibrations along a water pipe to detect and analyze the water usage. First, the device is mechanically clamped down and lock onto a water pipe. Once powered on, it’s onboard acclerometer measures the vibrations’ intensity, frequency, and duration. This information is then sent wirelessly to a central hub and then on to Lotik’s central servers.&lt;/p&gt;

&lt;p&gt;The microcontroller used was the NRF51422 from Nordic, selected primarily to utilize its built-in ANT+ wireless technology. ANT+ is a protocol which uses the same physical layer as Bluetooth LE, however it was designed for use with low-power mesh networking.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;rally---phone-charger&quot;&gt;Rally - Phone Charger&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tomorrow-lab.com/work/rally&quot;&gt;See documentation on Tomorrow Lab’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Rally Charging Cable was designed for &lt;a href=&quot;http://rallycharge.com/&quot;&gt;Rally&lt;/a&gt;, to a simple iPhone charging cable for public use. Any user, whether at a restaurant, bar, or other public space, can simply connect their phone to get a quick charge. When connected, the device charges the iPhone like normal, except the iPhone will display advertisements while being charged. Once the user is done charging, simply unplug and the advertisements stop.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/rally-1.jpg&quot; alt=&quot;Rally&#39;s iPhone Charger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My contributions to this project were minimal, as it was finishing up when I first joined Tomorrow Lab. I contributed to final PCB design and testing for the integrated iPhone cable.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://andysigler.github.io/products/tomorrow-lab/</link>
        <guid isPermaLink="true">http://andysigler.github.io/products/tomorrow-lab/</guid>
      </item>
    
      <item>
        <title>Python API: Moving Liquids</title>
        <description>&lt;video id=&quot;vid_aspirate&quot; style=&quot;width:100%;max-width:400px; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/aspirate-loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/aspirate-loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/aspirate-loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_aspirate = document.getElementById(&#39;vid_aspirate&#39;);
    vid_aspirate.removeAttribute(&#39;controls&#39;);
    vid_aspirate.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_aspirate.play();
    })
&lt;/script&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.opentrons.com/&quot;&gt;Opentrons API&lt;/a&gt; is an opensource software interface, written in Python, to control the set of Opentrons liquid-handlers. It was designed allow simple commands to perform relatively complex procedures, while at the same time exposing a lower level that gives the author control over the machine’s atomic movements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/opentrons_api_contributions_chart.png&quot; alt=&quot;API Contributions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the chart above, &lt;strong style=&quot;color:#EEA33B&quot;&gt;my contributions are shown in orange&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;From 2016-2018, I designed and programmed an important piece of the Python API; the automated-liquid-handling portions. Specifically, it starts at the high-level user protocol commands, and moves down through individual pipette movements, all the way down to programming motor spins.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;my-contributions&quot;&gt;My Contributions&lt;/h1&gt;

&lt;p&gt;Within the Opentrons Python API, mostly working on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Designing protocol commands&lt;/li&gt;
  &lt;li&gt;Designing pipette actions&lt;/li&gt;
  &lt;li&gt;Programming pipette movements&lt;/li&gt;
  &lt;li&gt;Programming motion control and hardware abstraction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s a video demoing my work. It shows protocol commands creating real-world liquid transfers:&lt;/p&gt;

&lt;video id=&quot;vid_demo&quot; style=&quot;width:100%;max-width:600px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/opentrons_api.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/opentrons_api.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/opentrons_api.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    var vid_demo = document.getElementById(&#39;vid_demo&#39;);
    vid_demo.removeAttribute(&#39;controls&#39;);
    vid_demo.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_demo.play();
    })
&lt;/script&gt; --&gt;

&lt;p&gt;As part of a team of four software developers in 2016, I played an outsized role in shaping the interface of the API. From experience in using the &lt;a href=&quot;https://shop.opentrons.com/collections/ot-one-s-robot-and-accessories&quot;&gt;OT-One&lt;/a&gt;, plus having solely writting the &lt;a href=&quot;http://andysigler.github.io/projects/opentrons-platform-prototype&quot;&gt;platform’s Kickstarter version all in Javascript&lt;/a&gt;, I new it was important to allow both lower-level control of liquid transfers, while giving another option for simple transfers. This allowed the API to satisfy both simple needs and programming beginners, as well as more complex procedures and those with Python experience.&lt;/p&gt;

&lt;p&gt;In addition to leading design of the API’s interface, I spent considerable time in 2016 for the OT-One and in 2017 for the OT2 writing the motion control aspect of the Opentrons software. This includes how a pipette moves around, what parameters are required to allow fine control of liquid transfers, software interfaces for controlling the stepper-motor-driving system, and finally communication with the machine’s stepper-motor-driver through GCode.&lt;/p&gt;

&lt;p&gt;See the project live &lt;a href=&quot;https://github.com/opentrons/opentrons&quot;&gt;on GitHub&lt;/a&gt;, and &lt;a href=&quot;https://docs.opentrons.com/atomic%20commands.html&quot;&gt;read the docs&lt;/a&gt;&lt;/p&gt;

&lt;!--
# How to Use: Python API Tutorial

Python was chosen to drive the Opentrons&#39; backend because of the language&#39;s prevalence in the scientific community. So because we&#39;re working with Python, we need to first import our instruments (the pipettes) and our labware (the plates, tip-racks, etc.):


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;opentrons&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instruments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labware&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Before we can get started, we need to know about [the Opentrons deck](https://docs.opentrons.com/labware.html#placing-labware-on-the-robot-deck). This is a set of slotted inserts that fit standard labware, so they do not move during a protocol. You&#39;ll notice in the picture below that each &quot;slot&quot; on the deck is numbered, so that when our protocol creates a new labware we can easily assign it&#39;s location to a numbered slot.

![Opentrons Deck](http://andysigler.github.io/images/opentrons-deck-small.png)
![Opentrons Deck](http://andysigler.github.io/images/opentrons-full-deck-small.jpg)

Now let&#39;s pretend we have a [trough](https://docs.opentrons.com/labware.html#troughs) filled with some sample, and we want to transfer that sample to a [well plate](https://docs.opentrons.com/labware.html#pcr-flat). The software contains accurate three-dimensional representations of these labwares, and the API can load them into your protocol like so:


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labware&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;trough-12row&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labware&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;96-PCR-flat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Next we need a [pipette](https://docs.opentrons.com/pipettes.html), which also need a [tip rack](https://docs.opentrons.com/labware.html#tipracks) which holds disposable tips for sterile liquid transfers. For the pipettes, let&#39;s use a 300uL single-channel, and put it on the OT2&#39;s left mount:


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;n&quot;&gt;tips&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labware&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;opentrons-tiprack-300ul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instruments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P300_Single&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tip_racks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


With our labware and pipettes ready, we can start transferring liquids!

As of this writing, the API has loosely speaking two layers of liquid-handling commands, the documentation names &quot;atomic&quot; and &quot;complex&quot;.

The [atomic commands](https://docs.opentrons.com/atomic%20commands.html) can be thought of as individual movements, controllable and sequencable through the API. Below are a set of atomic commands which do the following:

- Pick up a new tip from the tip rack
- Aspirate 100uL from the trough&#39;s A1 position
- Dispense 100uL to the plate&#39;s A1 position
- Drop the tip inside the deck&#39;s trash


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pick_up_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aspirate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


To add some complexity, we can fit in a few more atomic commands to give even more fine-tuned control over the liquid&#39;s movement:


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pick_up_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aspirate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touch_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;air_gap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blow_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


To make it easier to read, you can also chain together pipette commands:


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pick_up_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aspirate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touch_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;air_gap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blow_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_tip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


The [complex commands](https://docs.opentrons.com/complex%20commands.html) are one level higher, and hide the many details you are show when using atomic commands. To perform a similar liquid transfer as above, we can us the following complex command:

 
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;&lt;span class=&quot;n&quot;&gt;pipette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trough&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


That single line will automatically pick up a tip, transfer the 100uL, then drop the tip. These complex commands are much easier to understand, more approachable to beginners, while the trade-off is less control.

There is much more detail you can read in the documentaion linked to throughout this post.
 --&gt;
</description>
        <pubDate>Sun, 03 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://andysigler.github.io/products/opentrons-api/</link>
        <guid isPermaLink="true">http://andysigler.github.io/products/opentrons-api/</guid>
      </item>
    
      <item>
        <title>Magnetic Hue Light Controller</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-fridge.jpg&quot; alt=&quot;Pictures of the hue controller&quot; /&gt;&lt;/p&gt;

&lt;video id=&quot;vid_demo&quot; style=&quot;margin-left:auto;margin-right:auto;display:block;width:100%;max-width:640px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; poster=&quot;http://andysigler.github.io/images/hue-demo-poster.png&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-demo.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-demo.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-demo.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
//    var vid_demo = document.getElementById(&#39;vid_demo&#39;);
//    vid_demo.removeAttribute(&#39;controls&#39;);
//    vid_demo.addEventListener(&#39;canplaythrough&#39;, function(e){
//        vid_demo.play();
//    })
&lt;/script&gt;

&lt;video id=&quot;vid_fridge&quot; style=&quot;margin-left:auto;margin-right:auto;display:block;width:100%;max-width:640px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-fridge-loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-fridge-loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-fridge-loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_fridge = document.getElementById(&#39;vid_fridge&#39;);
    vid_fridge.removeAttribute(&#39;controls&#39;);
    vid_fridge.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_fridge.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-magnet-describe.jpg&quot; alt=&quot;How the magnets work&quot; /&gt;&lt;/p&gt;

&lt;video id=&quot;vid_pcb&quot; style=&quot;margin-left:auto;margin-right:auto;display:block;width:100%;max-width:640px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-pcb.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-pcb.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;http://andysigler.github.io/images/hue-pcb.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_pcb = document.getElementById(&#39;vid_pcb&#39;);
    vid_pcb.removeAttribute(&#39;controls&#39;);
    vid_pcb.addEventListener(&#39;canplaythrough&#39;, function(e){
        vid_pcb.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-pcb-coin.jpg&quot; alt=&quot;The main PCB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-pcb-slots.jpg&quot; alt=&quot;Slotted PCBs fit together to make the sides&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-pcb-soldered.jpg&quot; alt=&quot;Components soldered on&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-prototype-grid.jpg&quot; alt=&quot;Images of a prototype&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/hue-bend-wood.jpg&quot; alt=&quot;Bending some plywood for the enclosure&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://andysigler.github.io/projects/magnetic-hue-light-controller/</link>
        <guid isPermaLink="true">http://andysigler.github.io/projects/magnetic-hue-light-controller/</guid>
      </item>
    
      <item>
        <title>DIY PCB Setup</title>
        <description>&lt;p&gt;I just finished putting together a PCB “pipeline” in my bedroom. It’s an ensemble of tools to help me make boards at low cost and fast. Here I’ll take you through the main components.&lt;/p&gt;

&lt;h1 id=&quot;the-space&quot;&gt;The Space&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/room_fullShot_original.jpg&quot; alt=&quot;full shot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First off, the standing desk from Ikea, pictured above. 5’ x 2.5’, and 3.5’ tall, it keep all my work near my elbows so I don’t hurt my back, nor spend all day on my ass.&lt;/p&gt;

&lt;div class=&quot;row t30&quot;&gt;
    &lt;div class=&quot;medium-4 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_storage.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_storage.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-4 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_drawers.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_drawers.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-4 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_chemicals.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_chemicals.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;To separate all my stuff, I’ve got the small drawers to hold components, a drawer unit from Ikea to hold other parts, and a large plastic container to keep all the chemicals out of harm’s way.&lt;/p&gt;

&lt;h1 id=&quot;the-machines&quot;&gt;The Machines&lt;/h1&gt;

&lt;div class=&quot;row t30&quot;&gt;
    &lt;div class=&quot;medium-4 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_roland.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_roland.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-4 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_laminator.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_laminator.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-4 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_printer.jpg&quot;&gt;
       		&lt;img src=&quot;http://andysigler.github.io/images/room_printer.jpg&quot; alt=&quot;&quot; /&gt;
       	&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Going from right to left, I first have my Roland Modela I recently bought off ebay. It’s a fairly old machine, which is why I can get relatively cheap, but I’ve found it’s mechanics are better than anything else out there around the same price point. Also, I’ve been using the Modela at ITP for the past year, and have &lt;a href=&quot;http://andysigler.github.io/hardware/nodela&quot;&gt;written my own software suite&lt;/a&gt; to interface with it. It’s the right tool for me.&lt;/p&gt;

&lt;p&gt;Next, it’s a laminator from Amazon. Their cheapest one, I believe less than $20. I use it for applying toner and solder mask to my copper clad plates. It works much better if you rip the plastic top off, however it’s super hot so be careful if you do that same.&lt;/p&gt;

&lt;p&gt;Finally, a simple black &amp;amp; white laser printer I found on ebay. This is used for printing out designs from each to assist my toner transfer and solder mask processes.&lt;/p&gt;

&lt;h1 id=&quot;the-tools&quot;&gt;The Tools&lt;/h1&gt;

&lt;div class=&quot;row t30&quot;&gt;
    &lt;div class=&quot;medium-3 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_heat.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_heat.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-3 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_uv_box.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_uv_box.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-3 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_oven.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_oven.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;div class=&quot;medium-3 columns&quot;&gt;
    	&lt;a href=&quot;http://andysigler.github.io/images/room_hair_dryer.jpg&quot;&gt;
        	&lt;img src=&quot;http://andysigler.github.io/images/room_hair_dryer.jpg&quot; alt=&quot;&quot; /&gt;
        &lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Everybody who works with electronics should have a variable temperature soldering iron, but I recently needed to add a heat gun to my collection. It’s slim and seems to be working well for when I need to remove parts from a board, or for when I just don’t feel like using the toaster over.&lt;/p&gt;

&lt;p&gt;My UV exposure box was made by your’s truly (that’s why it’s so ugly), but with so many UV leds inside, it works super fast! I’ve been using this for when applying solder mask, but it might come in handy for if I ever start using photoresist instead of toner transfers to etch away traces. Other UV expsosure units can be found online for around $80, and if I could do it again I would have just bought one of those.&lt;/p&gt;

&lt;p&gt;Toaster oven, also from ebay, used for reflowing boards. Turns out reflowing in your bedroom can cause some pretty nasty fumes to build up, so I’ve also invested in a small fan and make sure to keep my windows and door open while doing this.&lt;/p&gt;

&lt;p&gt;The hair dryer is fairly basic, I didn’t have one before, but now I use it to dry off my boards after cleaning them off in water. I’ve learned to never wipe a board clean because you can easily ruin whatever it is you’ve just done to it (removing wet toner or solder mask).&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Aug 2015 00:00:00 -0400</pubDate>
        <link>http://andysigler.github.io/hardware/diy-pcb-setup/</link>
        <guid isPermaLink="true">http://andysigler.github.io/hardware/diy-pcb-setup/</guid>
      </item>
    
      <item>
        <title>Opentrons Platform Prototype</title>
        <description>&lt;h1 id=&quot;my-role-at-opentrons-labworks&quot;&gt;My Role at Opentrons Labworks&lt;/h1&gt;

&lt;p&gt;Beginning June 2014, I have worked with Opentrons in developing their low-cost, open-source liquid handling robot. Working with Opentrons has allowed me to spend nearly a month living and working in Shenzhen, China and HAXLR8R. Shenzhen is considered the hardware capitol of the world, and it was eye-opening to see a city completely centered around hardware manufacturing at all scales.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/opentrons_team.jpg&quot; alt=&quot;The Opentrons Founders&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My role with Opentrons was to prototype the liquid handling platform’s software stack. This means I was responsible for the early decisions and executions of its design-file format (for writing experiments), for designing and making the robot’s interface, experimenting with how it would accurately calibrate, and finally what &lt;strong&gt;exactly&lt;/strong&gt; it does on execution (aka how it moves).&lt;/p&gt;

&lt;h1 id=&quot;platform-overview&quot;&gt;Platform Overview&lt;/h1&gt;

&lt;p&gt;Below is a quick video I shot to demonstrate the prototype. All designs and software in the video (excluding the motor controller) were written by me.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/130249723&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;
Below is a diagram showing the different software blocks I developed. Each was iterated upon to reflect what the robot’s mechanical requirements, and to satisfy users’ needs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/opentrons_flowchart.png&quot; alt=&quot;Platform Prototype Flowchart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The file format fed in at the top ended up being a variation of the &lt;a href=&quot;http://autoprotocol.org/specification/&quot;&gt;Auto-Protocol standard proposed by Transcriptics&lt;/a&gt;, which uses JSON to describe a protocol’s many details and procedures. Because I needed to work fast, I used NodeJS to communicate with with robot’s motorcontroller, and I created an HTML5 interface for the user to interact with. Everything written in NodeJS has since been translated to Python, and the front-end has been handed off to front-end engineers.&lt;/p&gt;

&lt;h1 id=&quot;a-lesson-learned&quot;&gt;A Lesson Learned&lt;/h1&gt;

&lt;p&gt;This was my first time working on a real-world product/tool, and the experience has left me with one lesson that I will hold on to: Narrow down to what the &lt;u&gt;core&lt;/u&gt; experience of the product is, and get that single part working immediately, regardless of efficiencies and tools used.&lt;/p&gt;

&lt;p&gt;Even if it’s something that’s already been done before, or if it’s not even the entire minimum-viable-product. Get the thing doing what you say it can do, and see what you’ve learned. If you say the liquid handler can move hundreds of samples accurately, make it do that and that alone before working on any other problems.&lt;/p&gt;

&lt;p&gt;Odds are, you will see things that you didn’t expect or previously misjudged. Everything else down the road will be built up on top of that core feature, so it’s important to not gloss over it.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://andysigler.github.io/projects/opentrons-platform-prototype/</link>
        <guid isPermaLink="true">http://andysigler.github.io/projects/opentrons-platform-prototype/</guid>
      </item>
    
      <item>
        <title>The Internet of Useless Things</title>
        <description>&lt;p&gt;Sterling was discussing his work with Arduino, &lt;a href=&quot;http://casajasmina.arduino.cc/&quot;&gt;an open-source connected home called Casa Jasmina&lt;/a&gt;. The full 17 min talk can be viewed at the bottom of this post.&lt;/p&gt;

&lt;p&gt;What follows is in no way a direct transcript of that video. Instead, it is a cut down, re-ordered, and re-written version of my favorite parts. The edits were made to better align with and summarize my own thoughts.&lt;/p&gt;

&lt;p&gt;Also, check out my ITP master’s thesis presentation, &lt;a href=&quot;http://andysigler.github.io/projects/how-to-make-the-internet-of-useless-things&quot;&gt;How to Make the Interent of Useless Things&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
I want domestic internet art, designed for the home. I want internet of things art. I’d rather prefer it to be open-sourced art too. Luxurious, open-sourced, internet of things, cultural expression for the home.
&lt;br /&gt;&lt;br /&gt;
The trans-medial issue is, how to do it?
&lt;br /&gt;&lt;br /&gt;
Few connected things have been made to live in a domestic context. They have been in the home office, on the desktop, on the laptop, or even in the mobile handheld, but rarely ever in the home, per se. So what does that look like? More to the point, how &lt;strong&gt;&lt;u&gt;should&lt;/u&gt;&lt;/strong&gt; that look? And how should that be made to work, from the artist’s perspective?
&lt;br /&gt;&lt;br /&gt;
Will an internet of things home designed by corporations have any internet art in it?
&lt;br /&gt;&lt;br /&gt;
Obviously they’ll be very eager to retail digital rights management, movies and pop music. You can see them already drooling at the idea of doing that and meticulously tracking your purchases and your tastes. They’re also keen to slam the door on any intrusions on their vertically integrated stack data-streams.
&lt;br /&gt;&lt;br /&gt;
But what about the exploratory, inventive, and critical artwork that people actually find interesting? That needs a home, and I want to help make the home in which it properly belongs.
&lt;br /&gt;&lt;br /&gt;
I want living proof of what it’s like to actually live with these technologies, &lt;strong&gt;&lt;u&gt;on my own terms&lt;/u&gt;&lt;/strong&gt;.
&lt;br /&gt;&lt;br /&gt;
My home is not a business, not an office, and I am not a set of metrics. I’m not in any hurry. It’s my home. The things in it are not controlled by Facebook. They’re not optimized. They don’t have any particular purpose. You can’t rush me by pushing data at me. No, I will not archive any data. I do not data mine. I will not trace it back to anyone. Once data is expressed, enjoyed or experienced within the walls of my home, its gone forever.
&lt;/blockquote&gt;

&lt;p&gt;I have been thinking about art and musical instruments in the Internet of Things for a while now, and it exciting to finally hear rhetoric like this. While Sterling nor I know what will emerge out of pursuing these ideals, we certainly know what we do &lt;strong&gt;&lt;u&gt;not&lt;/u&gt;&lt;/strong&gt; want to make, and that’s important.&lt;/p&gt;

&lt;p&gt;If you haven’t read Bruce Sterling’s essay &lt;a href=&quot;http://www.amazon.com/The-Epic-Struggle-Internet-Things-ebook/dp/B00N7EKIJ4&quot;&gt;The Epic Struggle of the Internet of Things&lt;/a&gt;, I highly suggest you read it.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/JUvECBZpefU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; style=&quot;width:100%;max-width:560px;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Tue, 12 May 2015 00:00:00 -0400</pubDate>
        <link>http://andysigler.github.io/useless-things/art-and-the-internet-of-useless-things/</link>
        <guid isPermaLink="true">http://andysigler.github.io/useless-things/art-and-the-internet-of-useless-things/</guid>
      </item>
    
      <item>
        <title>Panelling Arduino Minis</title>
        <description>&lt;p&gt;Here are some pictures of my attempt at making a panel of 10 Arduino Mini’s of my own design. You can find the pin layout, board files, and other documentation on &lt;a href=&quot;https://github.com/andySigler/homemade-hardware/tree/master/Arduino-SMD&quot;&gt;GitHub&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;I’ve been working on this board design for a while, trying to make the board small and simple, yet having to consider the limitations of making my own PCBs in house (namely, vias being so difficult to make).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/arduino_smd_design.png&quot; alt=&quot;pinouts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These 10 boards were created within one day at ITP. I milled the panel in the morning, cleaned and added solder mask in the afternoon, and assembled at night. It was a long process, but I’ve never been able to make 10 boards of such quality and in such a short amount of time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/arduino_smd_pinout.png&quot; alt=&quot;pinouts&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;solder-mask-results&quot;&gt;Solder Mask Results&lt;/h1&gt;

&lt;p&gt;I’ve been using Dynamask dry-film solder mask, and it’s made populating boards much easier. I’ve documented the process a bit in my blog, and below are some pictures of my panel after milling and applying the solder mask.&lt;/p&gt;

&lt;p&gt;Top layer:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/0-top-mask.jpg&quot; alt=&quot;0-top-mask&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bottom layer:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/1-bottom-mask.jpg&quot; alt=&quot;1-bottom-mask&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pretty picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/2-cleaned-mask.jpg&quot; alt=&quot;2-cleaned-mask&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;results-after-assembly&quot;&gt;Results after Assembly&lt;/h1&gt;

&lt;p&gt;I used ITP’s manual pick-and-place machine to lay out the solder and place each component. I then reflowed using a heat gun, and finally soldered together all the vias.&lt;/p&gt;

&lt;p&gt;The vias are what takes the longest, and greatly restrict your design. I use a thin piece of wire to connect the top and bottom of the PCB, then solder each side. This means that there can not be any vias underneath any component or IC, and that they need a considerable amount of space to allow the solder to melt with causing any shorts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/4-diy_arduino_mini.jpg&quot; alt=&quot;4-diy_arduino_mini&quot; /&gt;
&lt;img src=&quot;http://andysigler.github.io/images/5-populated.jpg&quot; alt=&quot;5-populated&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;broken-out-boards&quot;&gt;Broken Out Boards&lt;/h1&gt;

&lt;p&gt;Bootloaded and test, they all work!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/6-brokenOut.jpg&quot; alt=&quot;6-brokenOut&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I decided to add the option of soldering a coin-cell battery holder onto the bottom. Here you can see one attached:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://andysigler.github.io/images/7-final.jpg&quot; alt=&quot;7-final&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2015 00:00:00 -0400</pubDate>
        <link>http://andysigler.github.io/hardware/panelling-arduino-minis/</link>
        <guid isPermaLink="true">http://andysigler.github.io/hardware/panelling-arduino-minis/</guid>
      </item>
    
  </channel>
</rss>
