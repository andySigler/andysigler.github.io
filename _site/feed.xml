<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andy Sigler</title>
    <description>I make things.</description>
    <link>https://andysigler.github.io/</link>
    <atom:link href="https://andysigler.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Tensorflow Simpsons Morph</title>
        <description>&lt;h1 id=&quot;click-here-to-try-it-out&quot;&gt;&lt;a href=&quot;https://andysigler.github.io/ml-experiments/experiments/4/output&quot;&gt;Click here to try it out!&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This experiment uses a convolutional autoencoder for performing principle component analysis on images of The Simpsons faces.&lt;/p&gt;

&lt;p&gt;This time, I wanted to focus on hyper-parameter tuning. Instead of guessing hyper-parameters and then overfitting, instead I built methods for iteratively training different parameters, and then analyzing the results on validation data.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Aug 2019 00:00:00 -0400</pubDate>
        <link>https://andysigler.github.io/machine-learning/tensorflow-simpsons-morph/</link>
        <guid isPermaLink="true">https://andysigler.github.io/machine-learning/tensorflow-simpsons-morph/</guid>
      </item>
    
      <item>
        <title>Tensorflow Doodling MDN</title>
        <description>&lt;h1 id=&quot;click-here-to-try-it-out&quot;&gt;&lt;a href=&quot;https://andysigler.github.io/ml-experiments/experiments/3/output&quot;&gt;Click here to try it out!&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Here’s another small experiment in machine learning. I wanted to make a model that can mimic how I doodle.&lt;/p&gt;

&lt;p&gt;This time, I used an MDN output layer to attempt to generate “real-world” samples from the output of an RNN model.&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Aug 2019 00:00:00 -0400</pubDate>
        <link>https://andysigler.github.io/machine-learning/tensorflow-doodling-mdn/</link>
        <guid isPermaLink="true">https://andysigler.github.io/machine-learning/tensorflow-doodling-mdn/</guid>
      </item>
    
      <item>
        <title>Tensorflow Vocoder Autoencoder</title>
        <description>&lt;h1 id=&quot;click-here-to-try-it-out&quot;&gt;&lt;a href=&quot;https://andysigler.github.io/ml-experiments/experiments/2&quot;&gt;Click here to try it out!&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;As one of the first small experiments I have made while teaching myself machine learning and tensorflow, I made something I find kind of fun/weird.&lt;/p&gt;

&lt;p&gt;I built an autoencoder that learned David Attenborough’s vocal features, and allow it to generate throat noises with an XY pad in the browser.&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jul 2019 00:00:00 -0400</pubDate>
        <link>https://andysigler.github.io/machine-learning/tensorflow-vocoder-autoencoder/</link>
        <guid isPermaLink="true">https://andysigler.github.io/machine-learning/tensorflow-vocoder-autoencoder/</guid>
      </item>
    
      <item>
        <title>Tensorflow Learning Materials</title>
        <description>&lt;p&gt;[Updated July 11, 2019]&lt;/p&gt;

&lt;p&gt;Beginning to absorb machine learning, and how I might apply it towards my interests, has been a daunting task these past few weeks. Even with all the hype, tensorflow has what feels like no (zero) good examples, tutorials, guides.&lt;/p&gt;

&lt;p&gt;This is a list of the things I’ve used to understand machine learning concepts, tensorflow basics, and building a model.&lt;/p&gt;

&lt;p&gt;[Note] these are ordered psuedo-chronologically, the idea being I wish I started at the first one, and ended with the last one.&lt;/p&gt;

&lt;h3 id=&quot;make-your-own-neural-network&quot;&gt;&lt;a href=&quot;https://www.amazon.com/Make-Your-Own-Neural-Network-ebook/dp/B01EER4Z4G&quot;&gt;Make Your Own Neural Network&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Great (short) book by Tariq Rashid, guides the reader through writing a simple deep network from scratch in python.&lt;/p&gt;

&lt;h3 id=&quot;machine-learning-for-artists&quot;&gt;&lt;a href=&quot;https://ml4a.github.io/ml4a/&quot;&gt;Machine Learning for Artists&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Website and courses by Gene Kogan, and understanding neural networks from the non-engineering, creative perspective. The lecture are great to just sit back and watch, try to absorb before moving on to actually making anything.&lt;/p&gt;

&lt;h3 id=&quot;mit-6s191-introduction-to-deep-learning&quot;&gt;&lt;a href=&quot;http://introtodeeplearning.com/&quot;&gt;MIT 6.S191: Introduction to Deep Learning&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;This short course was taught January 2019 to MIT students, and is a great intro and overview of what machine learning and tensorflow can offer. There are just a few lectures, and some homework that goes with them.&lt;/p&gt;

&lt;h3 id=&quot;tensoflow-tutorials-from-github-user-aymericdamien&quot;&gt;&lt;a href=&quot;https://github.com/aymericdamien/TensorFlow-Examples&quot;&gt;Tensoflow Tutorials from GitHub user aymericdamien&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;These tutorials have the most stars on github, the I love them because they don’t have distracting dependencies. These tutorials also include both lower-level learning, plus later examples that use Keras layer.&lt;/p&gt;

&lt;h3 id=&quot;tensorflow-v2-alpha-tutorials&quot;&gt;&lt;a href=&quot;https://www.tensorflow.org/alpha&quot;&gt;Tensorflow v2 Alpha Tutorials&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The offical tutorials. These are good for getting a deeper explaination from the developers. However, the tutorials have a lot of distracting dependencies, and the explainations tend to say a lot yet say very little…&lt;/p&gt;

&lt;h3 id=&quot;deep-learning-book&quot;&gt;&lt;a href=&quot;https://www.deeplearningbook.org/&quot;&gt;Deep Learning Book&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I read that this was considered the “bible” of machine learning. I found that while it can be fairly dense with mathematics, there are some invaluable bottom-line summaries, suggestions, and best-practices riddled throughout this book.&lt;/p&gt;

&lt;h3 id=&quot;a-recipe-for-training-neural-networks&quot;&gt;&lt;a href=&quot;https://karpathy.github.io/2019/04/25/recipe/&quot;&gt;A Recipe for Training Neural Networks&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Coming from designing electro-mechanical and wireless systems, I know how the development, test, and debug approach is very import. This reading gives what seems like great advice for how to approach buidling a model, step-by-step, to help catch mistakes when they happen.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>https://andysigler.github.io/machine-learning/tensorflow-learning-materials/</link>
        <guid isPermaLink="true">https://andysigler.github.io/machine-learning/tensorflow-learning-materials/</guid>
      </item>
    
      <item>
        <title>Colorful Solder Mask</title>
        <description>&lt;p&gt;This is exciting for me and my graduate course, &lt;a href=&quot;http://www.homemadehardware.com&quot;&gt;Homemade Hardware&lt;/a&gt;. I figured out how to make DIY PCBs with any design and color soldermask I want (wow!).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/colorful-solder-mask-cool-goo.jpg&quot; alt=&quot;Mid-Process of Solder Mask&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The reason this is so exciting for my class, is because I teach non-engineers, mostly artists and designers, how to design and fabricate circuit boards. If I am able to teach them how to make those same boards with any 2d design they want, I expect it will make them even more excited about the course.&lt;/p&gt;

&lt;p&gt;Not to mention, I hope some students will make some truly beautiful boards that would otherwise (not DIY) be possible (or at least not easy to get made somewhere).&lt;/p&gt;

&lt;p&gt;For now, I have no documentation of the process, but next Spring I will be including this process in my class website.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 May 2019 00:00:00 -0400</pubDate>
        <link>https://andysigler.github.io/hardware/colorful-solder-mask/</link>
        <guid isPermaLink="true">https://andysigler.github.io/hardware/colorful-solder-mask/</guid>
      </item>
    
      <item>
        <title>OT2 Electronics</title>
        <description>&lt;p&gt;The Opentrons OT2 liquid handler is the next step in opensource lab automation, and I’m proud to have been one of the few designers and engineers to work on it.&lt;/p&gt;

&lt;p&gt;During the OT2’s design and production, I had complete ownership of the machine’s electronics and firmware aspects (small startups, yea!).&lt;/p&gt;

&lt;video id=&quot;vid_ot2&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_video.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_video.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_video.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2 = document.getElementById(&apos;vid_ot2&apos;);
    vid_ot2.removeAttribute(&apos;controls&apos;);
    vid_ot2.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_ot2.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;circuit-boards&quot;&gt;Circuit Boards&lt;/h2&gt;

&lt;p&gt;The machine has 13 circuit boards inside it (plus a Raspberry Pi 3 and USB camera). Each of these boards was designed, prototyped, tested, certified (CE/FCC) and brought to production by me (small startups, yea!).&lt;/p&gt;

&lt;p&gt;See where each boards lives in the graphic below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_pcb_artwork.jpg&quot; alt=&quot;OT2 with PCBs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The most important PCB is the motor driver board in the machines head. This board is a 4-layer bad boy, which can control 6 stepper motors, and runs a fork of the opensource &lt;a href=&quot;https://github.com/opentrons/Smoothiewareot&quot;&gt;Smoothieware&lt;/a&gt; firwmare.&lt;/p&gt;

&lt;p&gt;All the rest of the boards are used to route signals between the driver board, the Raspberry Pi 3, and elsewhere. Plus there are boards for switches, connectors, buttons, etc.&lt;/p&gt;

&lt;p&gt;Below are some pictures of the real-life PCBs in an opened up machine:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_production_boards.jpg&quot; alt=&quot;OT2 PCBs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:33%&quot; src=&quot;https://andysigler.github.io/images/ot2_production_caitlyn.jpg&quot; /&gt;
&lt;img style=&quot;max-width:63%;margin-left:3.5%&quot; src=&quot;https://andysigler.github.io/images/ot2_production_kris.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;flex-ribbon-cable&quot;&gt;Flex Ribbon Cable&lt;/h2&gt;

&lt;p&gt;One exciting part of the design was to figure out how to route 32 conductors (power, data, and motor signals) across a 2-meter long ribbon cable. Not only is this cable being bent and twisted all over the place, but it’s carrying multiple types of signals that could all interfere during a protocol run.&lt;/p&gt;

&lt;p&gt;See the 2-meter ribbon cable in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_production_cables.jpg&quot; alt=&quot;OT2 Ribbon Cables&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;electronic-pipettes&quot;&gt;Electronic Pipettes&lt;/h2&gt;

&lt;p&gt;The OT2 electronic pipettes use a fairly simple mechanism to move the plunger up and down (seen in the animation below). The stepper motor inside the pipette is actually being driven by one of the 6 stepper axis on the main driver PCB, so no motor driver was required in the pipette.&lt;/p&gt;

&lt;p&gt;The electronics inside the pipette are mostly used for storing unique serial and model numbers, and data lines for communicating that information back.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:63%&quot; src=&quot;https://andysigler.github.io/images/pipette_diagram.gif&quot; /&gt;
&lt;img style=&quot;max-width:33%;margin-left:3.5%&quot; src=&quot;https://andysigler.github.io/images/ot2_production_pipette.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tip-probe&quot;&gt;Tip Probe&lt;/h2&gt;

&lt;p&gt;This thing is cool. It’s a series of 5 switches, used to detect the precise and accurate position of a disposable tip on a pipette.&lt;/p&gt;

&lt;p&gt;By simply moving to press against each switch, the OT2’s system is able to calculate the position, height, and diameter of a pipette tip. This allows the machine to then move the point of that tip accurately within any labware.&lt;/p&gt;

&lt;video id=&quot;vid_tip_probe&quot; style=&quot;width:100%;max-width:600px; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/tip_probe.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/tip_probe.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/tip_probe.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_tip_probe = document.getElementById(&apos;vid_tip_probe&apos;);
    vid_tip_probe.removeAttribute(&apos;controls&apos;);
    vid_tip_probe.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_tip_probe.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;more-pcb-artwork&quot;&gt;More PCB Artwork&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_pcb_art_vertical.jpg&quot; alt=&quot;OT2 PCBs Artwork&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;some-pictures-from-before--after-launch&quot;&gt;Some Pictures from Before &amp;amp; After Launch&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_camera.jpg&quot; alt=&quot;OT2 on Camera&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_prototype_gantry.jpg&quot; alt=&quot;OT2 Prototype&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_prototype_pcbs.jpg&quot; alt=&quot;OT2 Prototype Batch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:33%&quot; src=&quot;https://andysigler.github.io/images/ot2_prototype_caitlyn.jpg&quot; /&gt;
&lt;img style=&quot;max-width:63%;margin-left:3.5%&quot; src=&quot;https://andysigler.github.io/images/ot2_prototype_face.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_prototype_CE.jpg&quot; alt=&quot;OT2 CE&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/ot2_factory_people.jpg&quot; alt=&quot;Opentrons Employees in Shenzhen&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>https://andysigler.github.io/products/opentrons-ot2/</link>
        <guid isPermaLink="true">https://andysigler.github.io/products/opentrons-ot2/</guid>
      </item>
    
      <item>
        <title>Opentrons Modules</title>
        <description>&lt;p&gt;During 2017-‘18, I was the sole electronics designer and firmware developer for the two Opentrons Modules; &lt;a href=&quot;https://opentrons.com/modules&quot;&gt;the Thermocycler Moduel, the Temperature Module, and the Magnetic Module&lt;/a&gt;. These devices connect to the Opentrons OT2 hardware platform over simple USB connections, so they are easy to setup, use, and can even be used outside of the Opentrons platform (if anyone wants to do that).&lt;/p&gt;

&lt;p&gt;For each of these devices, I worked on a small team of 2-4 people doing early ideation, design, testing, design for manufacturing, and quality control, with myself owning the electronics, firmware, and testing side of things. The one exception being that I left Opentrons during the beta/pre-production phase of the Thermocycler, so I did not implement the final design changes nor the manufacturing workflow for that product, but the electronics/firmware design is largely mine.&lt;/p&gt;

&lt;h2 id=&quot;thermocycler-module&quot;&gt;Thermocycler Module&lt;/h2&gt;

&lt;p&gt;The Thermocycler ramps up and down in temperature, at about 4 degrees Celsius per-second, in order to rapidly change the temperature of whatever material it holds. This is to amplify different biological reactions (don’t ask me any more details about the science…). The liquids inside can read between 4-100 degrees Celsius.&lt;/p&gt;

&lt;p&gt;Because it is for automation, there is also a lid that can automatically open/close. This lid is also used as a heating element, raising to up to 110 degrees Celsius, in order to prevent condensation inside the sample plate.&lt;/p&gt;

&lt;video id=&quot;vid_cycler&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;960&quot; height=&quot;540&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/thermocycler-video.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/thermocycler-video.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/thermocycler-video.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_cycler = document.getElementById(&apos;vid_cycler&apos;);
    vid_cycler.removeAttribute(&apos;controls&apos;);
    vid_cycler.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_cycler.play();
    })
&lt;/script&gt;

&lt;p&gt;The electronics had a quite a lot going on. The main temperature control was driven by six peltier devices, where two would each be wired in serial, creating three pairs of two driven in parallel on their own PID loops. Also, the heated lid was driven by a simple heating pad, a stepper motor driving system was needed to open/close it, plus a solenoid to latch the lid shut and pop it open.&lt;/p&gt;

&lt;p&gt;Six separate thermistors, plus the ADC circuit to go along with them, were used to measure the parallel peltier pairs with accuracy of &amp;lt;0.1 degrees Celsius. An RGBW LED strip was added as a basic status and progress indicator, and of course there is a power button on the side.&lt;/p&gt;

&lt;p&gt;The PCBs pictured below were from the beta phase.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:48.75%;&quot; src=&quot;https://andysigler.github.io/images/ot2-thermocycler-pcb-main.jpg&quot; /&gt;
&lt;img style=&quot;max-width:48.75%;margin-left:1.4%&quot; src=&quot;https://andysigler.github.io/images/ot2-thermocycler-pcb-peltiers.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I left Opentrons during this project’s beta/pre-production phase, so I only have pictures from the testing times. Measure the accuracy and uniformity across all it’s internal wells was a big problem to solve, and took tons of work and iteration to get right. Having nobody on the team who’s worked with thermodynamics was probably the biggest challenge, since we were consisting realizing things that would have been obvious to someone like that.&lt;/p&gt;

&lt;p&gt;Below you can see about a dozen thermistors externally epoxied to the internal wells of an alpha prototype.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:48.75%;&quot; src=&quot;https://andysigler.github.io/images/ot2-thermocycler-prototype-lid.jpg&quot; /&gt;
&lt;img style=&quot;max-width:48.75%;margin-left:1.4%&quot; src=&quot;https://andysigler.github.io/images/ot2-thermocycler-prototype-thermistors.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;temperature-module&quot;&gt;Temperature Module&lt;/h2&gt;

&lt;p&gt;It keeps hot things hot and cold things cold! The Temperature Module can hold a temperature between 4-94 Celsius with +/- 1 Celcius accuracy and uniformity. Unlike the thermocycler (above), it was not designed to cycle between temperatures, but to instead hold a single steady temperature.&lt;/p&gt;

&lt;video id=&quot;vid_ot2_temp_deck&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_temp_deck.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_temp_deck.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_temp_deck.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_temp_deck = document.getElementById(&apos;vid_ot2_temp_deck&apos;);
    vid_ot2_temp_deck.removeAttribute(&apos;controls&apos;);
    vid_ot2_temp_deck.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_ot2_temp_deck.play();
    })
&lt;/script&gt;

&lt;p&gt;It uses two peltier devices to either heat or cool the top plate. A heatsink and fan are then used to cool the bottom side of the peltier devices. A number display at the top of the device shows the curren temperature, and either red or blue color to indicate temperature.&lt;/p&gt;

&lt;video id=&quot;vid_ot2_temp_deck_loop&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_temp_deck_loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_temp_deck_loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_temp_deck_loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_temp_deck_loop = document.getElementById(&apos;vid_ot2_temp_deck_loop&apos;);
    vid_ot2_temp_deck_loop.removeAttribute(&apos;controls&apos;);
    vid_ot2_temp_deck_loop.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_ot2_temp_deck_loop.play();
    })
&lt;/script&gt;

&lt;p&gt;It was a tight package to fit all the electronics, which ended up getting separated into four PCBs, pictured below.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:31.75%;&quot; src=&quot;https://andysigler.github.io/images/ot2_temp_deck_2.jpg&quot; /&gt;
&lt;img style=&quot;max-width:31.75%;margin-left:1.4%&quot; src=&quot;https://andysigler.github.io/images/ot2_temp_deck_3.jpg&quot; /&gt;
&lt;img style=&quot;max-width:31.75%;margin-left:1.4%&quot; src=&quot;https://andysigler.github.io/images/ot2_temp_deck_4.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;magnetic-module&quot;&gt;Magnetic Module&lt;/h2&gt;

&lt;p&gt;The Magnetic Module raises a set of magnets near the user’s sample, in order to attract iron beads that have been attached to a specific DNA strand they want to isolate (science!).&lt;/p&gt;

&lt;video id=&quot;vid_ot2_mag_deck&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_mag_deck.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_mag_deck.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_mag_deck.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_mag_deck = document.getElementById(&apos;vid_ot2_mag_deck&apos;);
    vid_ot2_mag_deck.removeAttribute(&apos;controls&apos;);
    vid_ot2_mag_deck.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_ot2_mag_deck.play();
    })
&lt;/script&gt;

&lt;p&gt;This device is simply composed of a stepper motor moving along a rail (to raise/lower the magnets), plus the electronics to move said motor.&lt;/p&gt;

&lt;video id=&quot;vid_ot2_mag_deck_loop&quot; style=&quot;width:100%; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_mag_deck_loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_mag_deck_loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/ot2_mag_deck_loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_ot2_mag_deck_loop = document.getElementById(&apos;vid_ot2_mag_deck_loop&apos;);
    vid_ot2_mag_deck_loop.removeAttribute(&apos;controls&apos;);
    vid_ot2_mag_deck_loop.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_ot2_mag_deck_loop.play();
    })
&lt;/script&gt;

&lt;p&gt;This one was simpler for the electronics, plus there was much more room for a single long PCB, pictured below. Also, just like the other Modules, it is connected to the OT2 over a simple USB cable.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;max-width:48.75%;&quot; src=&quot;https://andysigler.github.io/images/ot2_mag_deck_pcb.jpg&quot; /&gt;
&lt;img style=&quot;max-width:48.75%;margin-left:1.4%&quot; src=&quot;https://andysigler.github.io/images/ot2_modules_cables.jpg&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>https://andysigler.github.io/products/opentrons-modules/</link>
        <guid isPermaLink="true">https://andysigler.github.io/products/opentrons-modules/</guid>
      </item>
    
      <item>
        <title>Tomorrow Lab</title>
        <description>&lt;p&gt;I spent about a year working as a Electronics Design Engineer at &lt;a href=&quot;https://www.tomorrow-lab.com&quot;&gt;Tomorrow Lab&lt;/a&gt;. It was a wonderful experience, as it was my first job outside of the NYU sphere, and we were constantly working on new initiatives and technologies.&lt;/p&gt;

&lt;p&gt;Below I have described three products that I contributed to, some with more contributions than others. However, as Tomorrow Lab is hired by outside companies to design, some of the products that we spent considerable time on were never revealed to the world for any number of reasons outside of our control. Those that did not make it are not shown on this page, which is too bad (sad-face).&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;waycount---traffic-counter&quot;&gt;WayCount - Traffic Counter&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tomorrow-lab.com/work/waycount&quot;&gt;See documentation on Tomorrow Lab’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The WayCount it a car-counting device. It uses long tubes stretched across a rode to sense a car, logs the time it happened, and then transfers the accumulated data over Bluetooth to the owner’s smartphone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/waycount-1.jpg&quot; alt=&quot;WayCount Traffic Counter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The motivations behind making the, as conceived by Ted Ulrich at Tomorrow Lab, was to be an affordable, easy to use, and well designed device help monitor and plan traffic flows. The original WayCount transferred it’s data over USB, and had a more DIY feel. This next generation model was better designed, more accurate, and allowed data transfer wirelessly to make retrieval easier.&lt;/p&gt;

&lt;p&gt;My personal contributions to this project were early component testing and selection, systems design, firmware development, electrical/PCB design, and testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/waycount-2.jpg&quot; alt=&quot;WayCount Traffic Counter&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-it-works&quot;&gt;How it Works&lt;/h4&gt;

&lt;p&gt;When a wheel passes over the rubber tubes, it compresses the air inside, sending that pressure out to the ends of the tube. There are two tubes a few inches apart, so that the direction of the wheel can be estimated. Inside the device, a small piezo microphone is press-fit against the tube, to detect when there is a change in air pressure.&lt;/p&gt;

&lt;p&gt;Small amplifiers are used to boost the signal into a higher voltage. This signal then triggers the onboard analog counting ICs. These ICs were able to increment their binary outputs on every rising edge of the input signal, allowing very fast consecutive pulses to be temporarily recorded. Once a counter hit its limit, the microntroller would wake up from deep sleep and record the number of pulses that have occured since the last recording.&lt;/p&gt;

&lt;p&gt;The microcontroller inside is the NRF51822 from Nordic, which has built-in Bluetooth LE capabilities, as well as ultra low-power features to conserve battery power. With the combination of the analog counting ICs and the NRF51’s low-power consumption, the device is able to stay powered on a single battery for a few years.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lotik---water-monitor&quot;&gt;Lotik - Water Monitor&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tomorrow-lab.com/work/lotik&quot;&gt;See documentation on Tomorrow Lab’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This device, designed for &lt;a href=&quot;http://lotik.com&quot;&gt;Lotik Labs&lt;/a&gt;, is a water-usage monitor of for residential plumbing. The device is clamped onto any water pipe, like for a sink, faucet, or toilet, and it can detect when and how much water is flowing. This data is then sent wireless to a central hub located in the building, to transmit to Lotik’s central monitoring service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/lotik-1.jpg&quot; alt=&quot;Lotik Labs&apos; Water Monitor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Intended to be used by apartment building owners, installing many devices within a single building not only helps the devices communicate back to the internet, but also gives greater understanding into how, when, and who is using water in a building. Traditionally, a single apartment is given a single meter to track how much water is used, but with Lotik’s technology, the detail can be focused down to individual uses.&lt;/p&gt;

&lt;p&gt;My personal contributions to this project were early component testing and selection, systems design, firmware development, electrical/PCB design, and testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/lotik-2.jpg&quot; alt=&quot;Lotik Labs&apos; Water Monitor&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-it-works-1&quot;&gt;How it Works&lt;/h4&gt;

&lt;p&gt;The Lotick water monitor detects vibrations along a water pipe to detect and analyze the water usage. First, the device is mechanically clamped down and lock onto a water pipe. Once powered on, it’s onboard acclerometer measures the vibrations’ intensity, frequency, and duration. This information is then sent wirelessly to a central hub and then on to Lotik’s central servers.&lt;/p&gt;

&lt;p&gt;The microcontroller used was the NRF51422 from Nordic, selected primarily to utilize its built-in ANT+ wireless technology. ANT+ is a protocol which uses the same physical layer as Bluetooth LE, however it was designed for use with low-power mesh networking.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;rally---phone-charger&quot;&gt;Rally - Phone Charger&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tomorrow-lab.com/work/rally&quot;&gt;See documentation on Tomorrow Lab’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Rally Charging Cable was designed for &lt;a href=&quot;http://rallycharge.com/&quot;&gt;Rally&lt;/a&gt;, to a simple iPhone charging cable for public use. Any user, whether at a restaurant, bar, or other public space, can simply connect their phone to get a quick charge. When connected, the device charges the iPhone like normal, except the iPhone will display advertisements while being charged. Once the user is done charging, simply unplug and the advertisements stop.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/rally-1.jpg&quot; alt=&quot;Rally&apos;s iPhone Charger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My contributions to this project were minimal, as it was finishing up when I first joined Tomorrow Lab. I contributed to final PCB design and testing for the integrated iPhone cable.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Feb 2019 00:00:00 -0500</pubDate>
        <link>https://andysigler.github.io/products/tomorrow-lab/</link>
        <guid isPermaLink="true">https://andysigler.github.io/products/tomorrow-lab/</guid>
      </item>
    
      <item>
        <title>Python API: Moving Liquids</title>
        <description>&lt;video id=&quot;vid_aspirate&quot; style=&quot;width:100%;max-width:400px; height:auto; border:1px solid #aaa&quot; width=&quot;854&quot; height=&quot;480&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/aspirate-loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/aspirate-loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/aspirate-loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_aspirate = document.getElementById(&apos;vid_aspirate&apos;);
    vid_aspirate.removeAttribute(&apos;controls&apos;);
    vid_aspirate.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_aspirate.play();
    })
&lt;/script&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.opentrons.com/&quot;&gt;Opentrons API&lt;/a&gt; is an opensource software interface, written in Python, to control the set of Opentrons liquid-handlers. It was designed allow simple commands to perform relatively complex procedures, while at the same time exposing a lower level that gives the author control over the machine’s atomic movements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/opentrons_api_contributions_chart.png&quot; alt=&quot;API Contributions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the chart above, &lt;strong style=&quot;color:#EEA33B&quot;&gt;my contributions are shown in orange&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;From 2016-2018, I designed and programmed an important piece of the Python API; the automated-liquid-handling portions. Specifically, it starts at the high-level user protocol commands, and moves down through individual pipette movements, all the way down to programming motor spins.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-contributions&quot;&gt;My Contributions&lt;/h2&gt;

&lt;p&gt;Within the Opentrons Python API, mostly working on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Designing protocol commands&lt;/li&gt;
  &lt;li&gt;Designing pipette actions&lt;/li&gt;
  &lt;li&gt;Programming pipette movements&lt;/li&gt;
  &lt;li&gt;Programming motion control and hardware abstraction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s a video demoing my work. It shows protocol commands creating real-world liquid transfers:&lt;/p&gt;

&lt;video id=&quot;vid_demo&quot; style=&quot;width:100%;max-width:600px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/opentrons_api.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/opentrons_api.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/opentrons_api.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    var vid_demo = document.getElementById(&apos;vid_demo&apos;);
    vid_demo.removeAttribute(&apos;controls&apos;);
    vid_demo.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_demo.play();
    })
&lt;/script&gt; --&gt;

&lt;p&gt;As part of a team of four software developers in 2016, I played an outsized role in shaping the interface of the API. From experience in using the &lt;a href=&quot;https://shop.opentrons.com/collections/ot-one-s-robot-and-accessories&quot;&gt;OT-One&lt;/a&gt;, plus having solely writting the &lt;a href=&quot;https://andysigler.github.io/projects/opentrons-platform-prototype&quot;&gt;platform’s Kickstarter version all in Javascript&lt;/a&gt;, I new it was important to allow both lower-level control of liquid transfers, while giving another option for simple transfers. This allowed the API to satisfy both simple needs and programming beginners, as well as more complex procedures and those with Python experience.&lt;/p&gt;

&lt;p&gt;In addition to leading design of the API’s interface, I spent considerable time in 2016 for the OT-One and in 2017 for the OT2 writing the motion control aspect of the Opentrons software. This includes how a pipette moves around, what parameters are required to allow fine control of liquid transfers, software interfaces for controlling the stepper-motor-driving system, and finally communication with the machine’s stepper-motor-driver through GCode.&lt;/p&gt;

&lt;p&gt;See the project live &lt;a href=&quot;https://github.com/opentrons/opentrons&quot;&gt;on GitHub&lt;/a&gt;, and &lt;a href=&quot;https://docs.opentrons.com/atomic%20commands.html&quot;&gt;read the docs&lt;/a&gt;&lt;/p&gt;

&lt;!--
## How to Use: Python API Tutorial

Python was chosen to drive the Opentrons&apos; backend because of the language&apos;s prevalence in the scientific community. So because we&apos;re working with Python, we need to first import our instruments (the pipettes) and our labware (the plates, tip-racks, etc.):


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;from opentrons import instruments, labware&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


Before we can get started, we need to know about [the Opentrons deck](https://docs.opentrons.com/labware.html#placing-labware-on-the-robot-deck). This is a set of slotted inserts that fit standard labware, so they do not move during a protocol. You&apos;ll notice in the picture below that each &quot;slot&quot; on the deck is numbered, so that when our protocol creates a new labware we can easily assign it&apos;s location to a numbered slot.

![Opentrons Deck](https://andysigler.github.io/images/opentrons-deck-small.png)
![Opentrons Deck](https://andysigler.github.io/images/opentrons-full-deck-small.jpg)

Now let&apos;s pretend we have a [trough](https://docs.opentrons.com/labware.html#troughs) filled with some sample, and we want to transfer that sample to a [well plate](https://docs.opentrons.com/labware.html#pcr-flat). The software contains accurate three-dimensional representations of these labwares, and the API can load them into your protocol like so:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;trough = labware.load(&apos;trough-12row&apos;, slot=&apos;1&apos;)
plate = labware.load(&apos;96-PCR-flat&apos;, slot=&apos;2&apos;)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


Next we need a [pipette](https://docs.opentrons.com/pipettes.html), which also need a [tip rack](https://docs.opentrons.com/labware.html#tipracks) which holds disposable tips for sterile liquid transfers. For the pipettes, let&apos;s use a 300uL single-channel, and put it on the OT2&apos;s left mount:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;tips = labware.load(&apos;opentrons-tiprack-300ul&apos;, slot=&apos;3&apos;)
pipette = instruments.P300_Single(mount=&apos;left&apos;, tip_racks=[tips])&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


With our labware and pipettes ready, we can start transferring liquids!

As of this writing, the API has loosely speaking two layers of liquid-handling commands, the documentation names &quot;atomic&quot; and &quot;complex&quot;.

The [atomic commands](https://docs.opentrons.com/atomic%20commands.html) can be thought of as individual movements, controllable and sequencable through the API. Below are a set of atomic commands which do the following:

- Pick up a new tip from the tip rack
- Aspirate 100uL from the trough&apos;s A1 position
- Dispense 100uL to the plate&apos;s A1 position
- Drop the tip inside the deck&apos;s trash


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;pipette.pick_up_tip()
pipette.aspirate(100, trough.wells(&apos;A1&apos;))
pipette.dispense(100, trough.wells(&apos;A1&apos;))
pipette.drop_tip()&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


To add some complexity, we can fit in a few more atomic commands to give even more fine-tuned control over the liquid&apos;s movement:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;pipette.pick_up_tip()
pipette.aspirate(100, trough.wells(&apos;A1&apos;))
pipette.touch_tip()
pipette.air_gap(20)
pipette.dispense(100, trough.wells(&apos;A1&apos;))
pipette.blow_out()
pipette.drop_tip()&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


To make it easier to read, you can also chain together pipette commands:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;pipette.pick_up_tip()
pipette.aspirate(100, trough.wells(&apos;A1&apos;)).touch_tip().air_gap(20)
pipette.dispense(100, trough.wells(&apos;A1&apos;)).blow_out()
pipette.drop_tip()&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


The [complex commands](https://docs.opentrons.com/complex%20commands.html) are one level higher, and hide the many details you are show when using atomic commands. To perform a similar liquid transfer as above, we can us the following complex command:

 
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python3&quot; data-lang=&quot;python3&quot;&gt;pipette.transfer(100, trough.wells(&apos;A1&apos;), plate.wells(&apos;A1&apos;))&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


That single line will automatically pick up a tip, transfer the 100uL, then drop the tip. These complex commands are much easier to understand, more approachable to beginners, while the trade-off is less control.

There is much more detail you can read in the documentaion linked to throughout this post.
 --&gt;
</description>
        <pubDate>Sun, 03 Feb 2019 00:00:00 -0500</pubDate>
        <link>https://andysigler.github.io/products/opentrons-api/</link>
        <guid isPermaLink="true">https://andysigler.github.io/products/opentrons-api/</guid>
      </item>
    
      <item>
        <title>Magnetic Hue Light Controller</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-fridge.jpg&quot; alt=&quot;Pictures of the hue controller&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By simply changing the orientation of this device, it will control all the lights in my apartment. Plus, it can also work by sticking to a refrigerator (or anything else magnetic), and it’s battery lasts an entire year without a recharge.&lt;/p&gt;

&lt;p&gt;It’s like a magical 4-sided die; change the face, and it sets my Hue light settings. I’ve grown tired of the Apps and voice commands available to control my lights, so I made something physical and more interesting than just a button or something.&lt;/p&gt;

&lt;p&gt;This project started as a collaboration with &lt;a href=&quot;http://www.jayzehngebot.com/realjayz/?/about/&quot;&gt;Jay Zehngebot&lt;/a&gt; to redesign his 12-sided die, the “dod”.&lt;/p&gt;

&lt;p&gt;Watch the video below to see a quick demo of me controlling 3 Hue bulbs. It shows the device can work both on a tabletop, and also when magnetically attached to something (like a watering pot).&lt;/p&gt;

&lt;video id=&quot;vid_demo&quot; style=&quot;margin-left:auto;margin-right:auto;display:block;width:100%;max-width:640px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; poster=&quot;https://andysigler.github.io/images/hue-demo-poster.png&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-demo.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-demo.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-demo.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
//    var vid_demo = document.getElementById(&apos;vid_demo&apos;);
//    vid_demo.removeAttribute(&apos;controls&apos;);
//    vid_demo.addEventListener(&apos;canplaythrough&apos;, function(e){
//        vid_demo.play();
//    })
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I thought it would be a fun interaction to keep this thing on my refrigerator, so it was available to me whenever I was in the kitchen (we have limited counter space).&lt;/p&gt;

&lt;p&gt;The looping video below shows that if you change which face is against the fridge, then it will turn the kitchen light on or off.&lt;/p&gt;

&lt;video id=&quot;vid_fridge&quot; style=&quot;margin-left:auto;margin-right:auto;display:block;width:100%;max-width:640px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-fridge-loop.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-fridge-loop.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-fridge-loop.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_fridge = document.getElementById(&apos;vid_fridge&apos;);
    vid_fridge.removeAttribute(&apos;controls&apos;);
    vid_fridge.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_fridge.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Detecting this magnetic attachement is done using internal hall effect sensors. There are 4 total sensors, one next to each of the internal magnets. When a magnet is near another magnetic surface, the sensor detects the change in magnetic field.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-magnet-describe.jpg&quot; alt=&quot;How the magnets work&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Even cats like it!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-cat.jpg&quot; alt=&quot;On a cat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;diy-fabrication&quot;&gt;DIY Fabrication&lt;/h2&gt;

&lt;p&gt;I used a Bantam Tools Milling Machine to cut the circuit boards.&lt;/p&gt;

&lt;video id=&quot;vid_pcb&quot; style=&quot;margin-left:auto;margin-right:auto;display:block;width:100%;max-width:640px; height:auto; border:1px solid #aaa&quot; width=&quot;1280&quot; height=&quot;720&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-pcb.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-pcb.ogv&quot; type=&quot;video/ogg&quot; /&gt;
  &lt;source src=&quot;https://andysigler.github.io/images/hue-pcb.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var vid_pcb = document.getElementById(&apos;vid_pcb&apos;);
    vid_pcb.removeAttribute(&apos;controls&apos;);
    vid_pcb.addEventListener(&apos;canplaythrough&apos;, function(e){
        vid_pcb.play();
    })
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-pcb-coin.jpg&quot; alt=&quot;The main PCB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The entire device is made up of 4 circuit boards, connected together with slots and solder.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-pcb-slots.jpg&quot; alt=&quot;Slotted PCBs fit together to make the sides&quot; /&gt;&lt;/p&gt;

&lt;p&gt;An ESP32 module is used to run the firmware, connect to the Hue lights system over WiFi, and to enter a deep sleep mode. A 3-axis accelerometer is used to detect both movements and which side is facing down. Finally, 4 hall-effect sensors are placed on each PCB near that side’s magnet.&lt;/p&gt;

&lt;p&gt;If a movement is detected, the device will wake up from deep sleep. Once it is no longer moving, it will first check to see if a magnetic field is being pulled in any direction. If not, then it will check to see which side is facing down. The user-selected face is then used to set a Hue lights Scene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-pcb-soldered.jpg&quot; alt=&quot;Components soldered on&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There’s a 400mA/h lipo battery which fits snuggly inside. A micro-usb port is used to charge the battery, and also a small speaker can play sounds to let the user know what is going on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-prototype-grid.jpg&quot; alt=&quot;Images of a prototype&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The rounded shape of the device prevents it from resting on any side that does not have a magnet. Because the device is entirely covered in plywood, I needed to bend a piece to match near-perfectly with it’s form.&lt;/p&gt;

&lt;p&gt;To form the wood, I used a piece of 1” thick wood sanded down to match the shape, then some clamps and a sink full of water. The water allowed the wood to be more flexible, so as I slowly bent it to the rounded shape, it did not crack anywhere. I then left it clamped for 24 hours so it stayed put.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://andysigler.github.io/images/hue-bend-wood.jpg&quot; alt=&quot;Bending some plywood for the enclosure&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Mar 2017 00:00:00 -0400</pubDate>
        <link>https://andysigler.github.io/projects/magnetic-hue-light-controller/</link>
        <guid isPermaLink="true">https://andysigler.github.io/projects/magnetic-hue-light-controller/</guid>
      </item>
    
  </channel>
</rss>
